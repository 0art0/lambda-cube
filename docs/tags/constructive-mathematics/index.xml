<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>constructive-mathematics on λ-cube</title>
    <link>https://0art0.github.io/lambda-cube/tags/constructive-mathematics/</link>
    <description>Recent content in constructive-mathematics on λ-cube</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 29 Jan 2023 21:53:54 +0530</lastBuildDate><atom:link href="https://0art0.github.io/lambda-cube/tags/constructive-mathematics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Seemingly Impossible Lean Programs</title>
      <link>https://0art0.github.io/lambda-cube/posts/seemingly-impossible-lean-programs/</link>
      <pubDate>Sun, 29 Jan 2023 21:53:54 +0530</pubDate>
      
      <guid>https://0art0.github.io/lambda-cube/posts/seemingly-impossible-lean-programs/</guid>
      <description>Introduction - Infinite search in finite time It should come as no surprise that an exhaustive search over a finite set can be performed algorithmically by enumeration. On the other hand, it is impossible to perform such an exhaustive enumeration over the natural numbers or the integers, as these sets are infinite. However, somewhat paradoxically, there are infinite sets that can be exhaustively searched in finite time. More precisely, there is at least one infinite set $X$ with the property that for any given Boolean-valued function $p$ on $X$, it is possible to algorithmically verify within finite time whether $p$ holds for all elements of $X$ or to produce a counter-example if one exists.</description>
    </item>
    
  </channel>
</rss>
